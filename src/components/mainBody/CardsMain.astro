---
// CardsMain.astro
import { supabase } from '@/lib/supabase';
import CarouselReact from './CarouselV0';
import type { Variedades, VinosOrganizados, Wines } from './interface';

export async function fetchData() {
  const { data: vinos, error: errorVinos } = await supabase
    .from("vinos")
    .select(`
      id, 
      nombre, 
      precio, 
      variedad, 
      id_unica, 
      url_imagen, 
      variedades(id, variedad, tipo), 
      paises(id, pais)
    `);

  const { data: variedades, error: errorVariedades } = await supabase
    .from("variedades")
    .select(`id, variedad, tipo`);

  if (errorVinos || errorVariedades) {
    throw errorVinos || errorVariedades;
  }

  const organizarVinosPorVariedad = (vinos: any[], variedades: Variedades[]): VinosOrganizados => {
    return vinos.reduce((acc: VinosOrganizados, vino: Wines) => {
      // Obtener el nombre de la variedad desde el objeto de variedades del vino
      const nombreVariedad = vino.variedades.variedad;
  
      // Si la variedad aún no existe en el acumulador, inicializamos un array vacío
      if (!acc[nombreVariedad]) {
        acc[nombreVariedad] = [];
      }
  
      // Agregamos el vino al array correspondiente a la variedad
      acc[nombreVariedad].push(vino);
  
      return acc;
    }, {} as VinosOrganizados);
  };

  const vinosOrganizados = organizarVinosPorVariedad(vinos, variedades);

  return {
    vinosOrganizados
  };
}

const { vinosOrganizados } = await fetchData();
---
<main class="px-1 pt-3 pb-1 bg-normalColor11 rounded-r-xl col-span-2">
  {Object.keys(vinosOrganizados).map((variedad) => (
    <CarouselReact titulo={variedad.toString()} vinos={vinosOrganizados[variedad]} />
  ))}
</main>